name: build

on:
  push:
    branches: [master, ci]
  pull_request:
    branches: [master]

env:
  MESON_ARGS: >-
    --werror
    --fatal-meson-warnings
    -Danticheat-server=true
    -Dclient-gtv=true
    -Doss=auto
    -Dpacketdup-hack=true
    -Dtests=true
    -Dvariable-fps=true

jobs:
  mingw:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: ["i686", "x86_64"]
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64 meson nasm

      - name: Build
        run: |
          meson setup --cross-file=.ci/${{ matrix.arch }}-w64-mingw32.txt ${{ env.MESON_ARGS }} builddir
          ninja -C builddir

  msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: ["x86", "x64"]
    steps:
      - uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@d8610e2b41c6d0f0c3b4c46dad8df0fd826c68e1
        with:
          arch: ${{ matrix.arch }}

      - name: Install dependencies
        run: pip3 install --no-input meson ninja

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} builddir
          ninja -C builddir

  linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cc: [gcc, clang]
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson libsdl2-dev libopenal-dev \
          libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
          libcurl4-gnutls-dev libx11-dev libxi-dev \
          libwayland-dev wayland-protocols

      - name: Build
        run: |
          meson setup ${{ env.MESON_ARGS }} builddir
          ninja -C builddir
        env:
          CC: ${{ matrix.cc }}
